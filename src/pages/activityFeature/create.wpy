<style>
  @import "../../assets/style/iconfont_editor.wxss";
  .eidt-detail-images-container .btn-container {
    margin-top: 20rpx;
  }
  .eidt-detail-images-container .btn-container .btn-view {
    padding: 0rpx 32rpx 32rpx 32rpx;
  }
  .eidt-detail-images-container .btn-container .btn-view button {
    border-radius: 0rpx;
  }
  .wrapper {
    padding: 5px;
  }
  .iconfont {
    display: inline-block;
    padding: 8px 8px;
    width: 24px;
    height: 24px;
    cursor: pointer;
    font-size: 20px;
  }
  .toolbar {
    box-sizing: border-box;
    border-bottom: 0;
    font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
  }
  .ql-container {
    box-sizing: border-box;
    padding: 12px 15px;
    width: 100%;
    min-height: 30vh;
    height: 100%;
    background: #fff;
    margin-top: 20px;
    font-size: 16px;
    line-height: 1.5;
    border: 1px solid #eee;
  }
  .ql-active {
    color: #06c;
  }
</style>
<template>
  <div class="page">
    <div class="page__hd">
      <form bindsubmit="submit">
        <!-- 填写标题 -->
        <div class="weui-cells__title"><text class="error-message">*</text>标题</div>
        <div class="weui-cells weui-cells_after-title">
          <div class="weui-cell weui-cell_input">
            <div class="weui-cell__bd">
              <input class="weui-input" placeholder="请输入标题,方便记忆" name="title" />
            </div>
            <div v-if=" errors.title " class="weui-cell__ft">
              <icon type="warn" size="23" color="#E64340"></icon>
            </div>
          </div>
        </div>
        <!-- 标题错误信息 -->
        <div v-if=" errors.title " class="weui-cells__tips error-message">{{ errors.title[0] }}</div>

        <div class="weui-cells__title"><text class="error-message">*</text>活动特色说明(不要使用输入法键盘的换行,否则会无效.请使用编辑器换行按钮)</div>
        <div class="page eidt-detail-images-container">
          <scroll-view scroll-y="true" style="width:100%">
            <div>
              <div class="wrapper">
                <div class="toolbar" bindtap="format">
                  <i class="iconfont icon-charutupian" bindtap="insertImage"></i>
                  <i class="iconfont icon-format-header-1 {{formats.header === 1 ? 'ql-active' : ''}}" data-name="header" data-value="{{1}}"></i>
                  <i class="iconfont icon-format-header-2 {{formats.header === 2 ? 'ql-active' : ''}}" data-name="header" data-value="{{2}}"></i>
                  <i class="iconfont icon-format-header-3 {{formats.header === 3 ? 'ql-active' : ''}}" data-name="header" data-value="{{3}}"></i>
                  <i class="iconfont icon-format-header-4 {{formats.header === 4 ? 'ql-active' : ''}}" data-name="header" data-value="{{4}}"></i>
                  <i class="iconfont icon-format-header-5 {{formats.header === 5 ? 'ql-active' : ''}}" data-name="header" data-value="{{4}}"></i>
                  <i class="iconfont icon-format-header-6 {{formats.header === 6 ? 'ql-active' : ''}}" data-name="header" data-value="{{4}}"></i>
                  <i class="iconfont icon-zitijiacu {{formats.bold ? 'ql-active' : ''}}" data-name="bold"></i>
                  <i class="iconfont icon-zitixieti {{formats.italic ? 'ql-active' : ''}}" data-name="italic"></i>
                  <i class="iconfont icon-zitixiahuaxian {{formats.underline ? 'ql-active' : ''}}" data-name="underline"></i>
                  <i class="iconfont icon-zitishanchuxian {{formats.strike ? 'ql-active' : ''}}" data-name="strike"></i>
                  <i class="iconfont icon-zuoduiqi {{formats.align === 'left' ? 'ql-active' : ''}}" data-name="align" data-value="left"></i>
                  <i class="iconfont icon-juzhongduiqi {{formats.align === 'center' ? 'ql-active' : ''}}" data-name="align" data-value="center"></i>
                  <i class="iconfont icon-youduiqi {{formats.align === 'right' ? 'ql-active' : ''}}" data-name="align" data-value="right"></i>
                  <i class="iconfont icon-zuoyouduiqi {{formats.align === 'justify' ? 'ql-active' : ''}}" data-name="align" data-value="justify"></i>
                  <i class="iconfont icon-clearedformat" bindtap="removeFormat"></i>
                  <i class="iconfont icon-font {{formats.fontFamily ? 'ql-active' : ''}}" data-name="fontFamily" data-value="Pacifico"></i>
                  <i class="iconfont icon-fontsize {{formats.fontSize === '24px' ? 'ql-active' : ''}}" data-name="fontSize" data-value="24px"></i>
                  <i class="iconfont icon-text_color {{formats.color === '#0000ff' ? 'ql-active' : ''}}" data-name="color" data-value="#0000ff"></i>
                  <i class="iconfont icon-fontbgcolor {{formats.backgroundColor === '#00ff00' ? 'ql-active' : ''}}" data-name="backgroundColor" data-value="#00ff00"></i>
                  <i class="iconfont icon-date" bindtap="insertDate"></i>
                  <i class="iconfont icon--checklist" data-name="list" data-value="check"></i>
                  <i class="iconfont icon-youxupailie {{formats.list === 'ordered' ? 'ql-active' : ''}}" data-name="list" data-value="ordered"></i>
                  <i class="iconfont icon-wuxupailie {{formats.list === 'bullet' ? 'ql-active' : ''}}" data-name="list" data-value="bullet"></i>
                  <i class="iconfont icon-fengexian" bindtap="insertDivider"></i>
                  <i class="iconfont icon-undo" bindtap="undo"></i>
                  <i class="iconfont icon-redo" bindtap="redo"></i>
                  <i class="iconfont icon-shanchu" bindtap="clear"></i>
                  <i class="iconfont icon-huanhang" bindtap="huanhang"></i>
                </div>
                <editor id="editor" class="ql-container" placeholder="{{placeholder}}" showImgSize showImgToolbar showImgResize bindstatuschange="onStatusChange" read-only="{{readOnly}}" bindready="onEditorReady"></editor>
              </div>
            </div>
          </scroll-view>
        </div>
        <div v-if=" errors.content " class="weui-cells__tips error-message">{{ errors.content[0] }}</div>

        <!-- 填写 是否显示 start -->
        <div class="weui-cells weui-cells_after-title">
          <div class="weui-cell  weui-cell_switch">
            <div class="weui-cell__bd">是否显示</div>
            <div class="weui-cell__ft">
              <switch name="status" checked="{{ status }}" bindchange="bindStatus" />
            </div>
          </div>
        </div>
        <div v-if=" errors.status " class="weui-cells__tips error-message">{{ errors.status[0] }}</div>
        <!-- 填写 是否显示 end -->

        <div class="weui-btn-area">
          <button class="weui-btn" type="primary" formType="submit">提交</button>
        </div>
      </form>
    </div>
  </div>
</template>
<config>
  {
    "navigationBarTitleText": "发布活动特色说明",
    "disableScroll": false
  }
</config>
<script>
  import wepy from '@wepy/core'
  import store from '@/store'
  import { mapGetters } from '@wepy/x'
  import util from '../../utils/util'
  import { createActivityFeature } from '../../api/activityFeature'
  import { updateAvatar } from '@/api/user'

  wepy.page({
    store,
    data: {
      formats: {},
      readOnly: false,
      placeholder: '请输入活动特色说明',
      status: true,
      errors: {},
      editorCtx: {},
      clubId: 0
    },
    computed: {
      ...mapGetters(['user', 'isLoggedIn'])
    },
    methods: {
      bindStatus(e) {
        this.status = e.$wx.detail.value
      },
      // 表单提交
      async submit (e) {
        try {
          // e.detail.value 为表单提交的数据
          let formData = e.$wx.detail.value
          formData.club_id = this.clubId
          // 获取富文本编辑器内容
          let editor_response = await this.editorCtx.getContents()
          formData.content = editor_response.html
          let editResponse = await createActivityFeature(formData)
          // 请求成功，缓存用户数据
          if (editResponse.statusCode === 201) {
            util.success('发布成功')

            // 2 秒后返回上一页
            setTimeout(function() {
              wx.navigateBack()
            }, 2000)
          }
        } catch (err) {
          // 设置报错信息
          if (err.statusCode === 422) {
            this.errors = err.data.errors
          }
        }
      },
      readOnlyChange() {
        this.readOnly = !this.readOnly
      },
      onEditorReady() {
        const that = this
        wx.createSelectorQuery().select('#editor').context(function (res) {
          that.editorCtx = res.context
        }).exec()
      },
      blur() {
        this.editorCtx.blur()
      },
      format(e) {
        console.log(e.$wx)
        let { name, value } = e.$wx.target.dataset
        if (!name) return
        // console.log('format', name, value)
        this.editorCtx.format(name, value)
      },
      onStatusChange(e) {
        const formats = e.$wx.detail.value
        this.formats = formats
      },
      insertDivider() {
        this.editorCtx.insertDivider({
          success: function () {
            console.log('insert divider success')
          }
        })
      },
      clear() {
        this.editorCtx.clear({
          success: function (res) {
            console.log("clear success")
          }
        })
      },
      huanhang() {
        this.editorCtx.insertText({ text: '\n' })
      },
      removeFormat() {
        this.editorCtx.removeFormat()
      },
      insertDate() {
        const date = new Date()
        const formatDate = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`
        this.editorCtx.insertText({
          text: formatDate
        })
      },
      undo(e) {
        this.editorCtx.undo()
      },
      redo(e) {
        this.editorCtx.redo()
      },
      async insertImage() {
        const that = this
        let image = await wepy.wx.chooseImage({count: 1})
        try {
          // 获取选择的图片
          let avatar = image.tempFilePaths[0]
          // 调用上传图片接口
          let imageResponse = await updateAvatar(avatar, 'editor')
          console.log(imageResponse)
          // 小程序上传结果没有做 JSON.parse，需要手动处理
          let responseData = JSON.parse(imageResponse.data)
          that.editorCtx.insertImage({
            src: responseData.path,
            data: {
              id: 'abcd',
              role: 'god'
            },
            width: '80%',
            success: function () {
              console.log('insert image success')
            }
          })
        } catch (err) {}
      }
    },
    async onLoad(options) {
      this.clubId = options.id
    }
  })
</script>
