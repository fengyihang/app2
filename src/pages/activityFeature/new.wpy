<style>
  @import "../../assets/style/iconfont_editor.wxss";
  .eidt-detail-images-container .btn-container {
    margin-top: 20rpx;
  }

  .eidt-detail-images-container .btn-container .btn-view {
    padding: 0rpx 32rpx 32rpx 32rpx;
  }

  .eidt-detail-images-container .btn-container .btn-view button {
    border-radius: 0rpx;
  }

  .wrapper {
    padding: 5px;
  }

  .iconfont {
    display: inline-block;
    padding: 8px 8px;
    width: 24px;
    height: 24px;
    cursor: pointer;
    font-size: 20px;
  }

  .toolbar {
    box-sizing: border-box;
    border-bottom: 0;
    font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;
  }

  .ql-container {
    box-sizing: border-box;
    padding: 12px 15px;
    width: 100%;
    min-height: 30vh;
    height: 100%;
    background: #fff;
    margin-top: 20px;
    font-size: 16px;
    line-height: 1.5;
    border: 1px solid #eee;
  }

  .ql-active {
    color: #06c;
  }

  .title{
    font-weight: bold;
    font-size: 20px;
    margin: 10rpx;
  }
</style>
<template>
  <div class="page">
    <div class="page__hd">
      <form bindsubmit="submit">
        <scroll-view scroll-y="true" style="width:100%">
          <!-- 填写标题 -->
          <div class="weui-cells__title"><text class="error-message">*</text>标题</div>
          <div class="weui-cells weui-cells_after-title">
            <div class="weui-cell weui-cell_input">
              <div class="weui-cell__bd">
                <input class="weui-input" placeholder="请输入标题,方便记忆" name="title" value="{{ activityFeature.title }}"/>
              </div>
              <div v-if=" errors.title " class="weui-cell__ft">
                <icon type="warn" size="23" color="#E64340"></icon>
              </div>
            </div>
          </div>
          <!-- 标题错误信息 -->
          <div v-if=" errors.title " class="weui-cells__tips error-message">{{ errors.title[0] }}</div>

          <div class="weui-cells__title"><text class="error-message">*</text>活动特色说明</div>

          <!-- 填写 是否显示 start -->
          <div class="weui-cells weui-cells_after-title">
            <div class="weui-cell  weui-cell_switch">
              <div class="weui-cell__bd">是否显示</div>
              <div class="weui-cell__ft">
                <switch name="status" checked="{{ status }}" bindchange="bindStatus" />
              </div>
            </div>
          </div>
          <div v-if=" errors.status " class="weui-cells__tips error-message">{{ errors.status[0] }}</div>
          <!-- 填写 是否显示 end -->

          <div class="weui-btn-area">
            <button class="weui-btn" type="primary" formType="submit">提交</button>
          </div>
        </scroll-view>
      </form>
    </div>
  </div>
</template>
<config>
  {
    "navigationBarTitleText": "编辑活动特色",
    "disableScroll": false,
  }
</config>
<script>
  import wepy from '@wepy/core'
  import store from '@/store'
  import { mapGetters } from '@wepy/x'
  import eventHub from '@/common/eventHub'
  import { updateActivityFeature, getActivityFeature } from '../../api/activityFeature'
  import util from '../../utils/util'

  wepy.page({
    store,
    data: {
      status: false,
      errors: {},
      activityFeature: {}
    },
    computed: {
      ...mapGetters(['user', 'isLoggedIn'])
    },
    methods: {
      // 表单提交
      async submit(e) {
        try {
          // e.detail.value 为表单提交的数据
          let formData = e.$wx.detail.value
          // 获取富文本编辑器内容
          let editor_response = await this.editorCtx.getContents()
          formData.content = editor_response.html
          let editResponse = await updateActivityFeature(this.activityFeature.id, formData)
          // 请求成功，缓存用户数据
          if (editResponse.statusCode === 200) {
            util.success('编辑成功')

            // 2 秒后返回上一页
            setTimeout(function() {
              wx.navigateBack()
            }, 2000)
          }
        } catch (err) {
          // 设置报错信息
          if (err.statusCode === 422) {
            this.errors = err.data.errors
          }
        }
      },
      async loadActivityFeature(id) {
        const response = await getActivityFeature(id)
        this.activityFeature = response.data
      },
      bindStatus(e) {
        this.status = e.$wx.detail.value
      }
    },
    async onLoad(options) {
      this.id = options.id
      await this.loadActivityFeature(this.id)
      wx.setNavigationBarTitle({
        title: '编辑' + this.activityFeature.title
      })
      this.status = this.activityFeature.status
    }
  })
</script>
