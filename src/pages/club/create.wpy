<style lang="less">
  @import "../../assets/style/iconfont_editor.wxss";
  .avatar {
    width: 80px;
    height: 80px;
    display: block;
    border-radius: 50%;
  }
  .avatar-wrap {
    margin-top: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .block {
    background: #fff;
  }

  .list_item {
    display: flex;
    align-items: center;
    border-top: 1px solid #efefef;
    padding: 35rpx 20rpx;
    .title {
      margin-right: 20rpx;
    }
    .input {
      flex: 1;
      input {
        color: #333;
      }
    }
  }

  .btn_box {
    margin-top: 64rpx;
    padding: 0 24rpx;
  }

  .icon-xiazai{
    font-size: 72px;
    color: #1296db;
  }
</style>
<template>
  <form bindsubmit="submit">
    <div class="weui-cells__title"><text class="error-message">*</text>俱乐部头像</div>
    <div class="avatar-wrap">
      <text v-if=" !avatar " class="iconfont icon-xiazai" @tap="updateAvatar"></text>
      <image v-if=" avatar " class="avatar" src="{{ avatar }}" @tap="updateAvatar"/>
    </div>
    <div v-if=" errors.avatar_image_id " class="weui-cells__tips error-message">{{ errors.avatar_image_id[0] }}</div>

    <!-- 填写姓名 -->
    <div class="weui-cells__title"><text class="error-message">*</text>俱乐部名称</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input">
        <div class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入俱乐部名称" bindinput="keyTitle" name="title" value="{{ user.title }}" />
        </div>
        <div v-if=" errors.title " class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <!-- 姓名错误信息 -->
    <div v-if=" errors.title " class="weui-cells__tips error-message">{{ errors.title[0] }}</div>

    <!-- 填写简介 -->
    <div class="weui-cells__title"><text class="error-message">*</text>俱乐部简介</div>
    <div class="page eidt-detail-images-container">
      <scroll-view scroll-y="true" style="width:100%">
        <div>
          <div class="wrapper">
            <div class="toolbar" bindtap="format">
              <i class="iconfont icon-charutupian" bindtap="insertImage"></i>
              <i class="iconfont icon-format-header-1 {{formats.header === 1 ? 'ql-active' : ''}}" data-name="header" data-value="{{1}}"></i>
              <i class="iconfont icon-format-header-2 {{formats.header === 2 ? 'ql-active' : ''}}" data-name="header" data-value="{{2}}"></i>
              <i class="iconfont icon-format-header-3 {{formats.header === 3 ? 'ql-active' : ''}}" data-name="header" data-value="{{3}}"></i>
              <i class="iconfont icon-format-header-4 {{formats.header === 4 ? 'ql-active' : ''}}" data-name="header" data-value="{{4}}"></i>
              <i class="iconfont icon-format-header-5 {{formats.header === 5 ? 'ql-active' : ''}}" data-name="header" data-value="{{4}}"></i>
              <i class="iconfont icon-format-header-6 {{formats.header === 6 ? 'ql-active' : ''}}" data-name="header" data-value="{{4}}"></i>
              <i class="iconfont icon-zitijiacu {{formats.bold ? 'ql-active' : ''}}" data-name="bold"></i>
              <i class="iconfont icon-zitixieti {{formats.italic ? 'ql-active' : ''}}" data-name="italic"></i>
              <i class="iconfont icon-zitixiahuaxian {{formats.underline ? 'ql-active' : ''}}" data-name="underline"></i>
              <i class="iconfont icon-zitishanchuxian {{formats.strike ? 'ql-active' : ''}}" data-name="strike"></i>
              <i class="iconfont icon-zuoduiqi {{formats.align === 'left' ? 'ql-active' : ''}}" data-name="align" data-value="left"></i>
              <i class="iconfont icon-juzhongduiqi {{formats.align === 'center' ? 'ql-active' : ''}}" data-name="align" data-value="center"></i>
              <i class="iconfont icon-youduiqi {{formats.align === 'right' ? 'ql-active' : ''}}" data-name="align" data-value="right"></i>
              <i class="iconfont icon-zuoyouduiqi {{formats.align === 'justify' ? 'ql-active' : ''}}" data-name="align" data-value="justify"></i>
              <i class="iconfont icon-clearedformat" bindtap="removeFormat"></i>
              <i class="iconfont icon-font {{formats.fontFamily ? 'ql-active' : ''}}" data-name="fontFamily" data-value="Pacifico"></i>
              <i class="iconfont icon-fontsize {{formats.fontSize === '24px' ? 'ql-active' : ''}}" data-name="fontSize" data-value="24px"></i>
              <i class="iconfont icon-text_color {{formats.color === '#0000ff' ? 'ql-active' : ''}}" data-name="color" data-value="#0000ff"></i>
              <i class="iconfont icon-fontbgcolor {{formats.backgroundColor === '#00ff00' ? 'ql-active' : ''}}" data-name="backgroundColor" data-value="#00ff00"></i>
              <i class="iconfont icon-date" bindtap="insertDate"></i>
              <i class="iconfont icon--checklist" data-name="list" data-value="check"></i>
              <i class="iconfont icon-youxupailie {{formats.list === 'ordered' ? 'ql-active' : ''}}" data-name="list" data-value="ordered"></i>
              <i class="iconfont icon-wuxupailie {{formats.list === 'bullet' ? 'ql-active' : ''}}" data-name="list" data-value="bullet"></i>
              <i class="iconfont icon-fengexian" bindtap="insertDivider"></i>
              <i class="iconfont icon-undo" bindtap="undo"></i>
              <i class="iconfont icon-redo" bindtap="redo"></i>
              <i class="iconfont icon-shanchu" bindtap="clear"></i>
              <i class="iconfont icon-huanhang" bindtap="huanhang"></i>
            </div>
            <editor id="editor" class="ql-container" placeholder="{{placeholder}}" showImgSize showImgToolbar showImgResize bindstatuschange="onStatusChange" read-only="{{readOnly}}" bindready="onEditorReady"></editor>
          </div>
        </div>
      </scroll-view>
    </div>
    <!-- 姓名错误信息 -->
    <div v-if=" errors.desc " class="weui-cells__tips error-message">{{ errors.desc[0] }}</div>

    <!-- 填写手机号 -->
    <div class="weui-cells__title"><text class="error-message">*</text>手机号</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input">
        <div class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入手机号" name="phone" value="{{ userInfo.phone }}" disabled="disabled" />
        </div>
        <div v-if=" errors.phone " class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <!-- 手机号错误信息 -->
    <div v-if=" errors.phone " class="weui-cells__tips error-message">{{ errors.phone[0] }}</div>

    <!-- 填写微信号 -->
    <div class="weui-cells__title">微信号</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input">
        <div class="weui-cell__bd">
          <input class="weui-input" placeholder="请输入微信号" name="wechat" bindinput="keyWechat" value="{{ user.wechat }}" />
        </div>
        <div v-if=" errors.wechat " class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <!-- 微信号错误信息 -->
    <div v-if=" errors.wechat " class="weui-cells__tips error-message">{{ errors.wechat[0] }}</div>

    <div class="weui-cells__title"><text class="error-message">*</text>所在地区</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input">
        <picker mode="region" bindchange="bindRegionChange" value="{{region}}" custom-item="{{customItem}}">
          <view class="picker">
            {{region[0]}}，{{region[1]}}，{{region[2]}}
          </view>
        </picker>
        <div v-if=" errors.province " class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <!-- 微信号错误信息 -->
    <div v-if=" errors.province " class="weui-cells__tips error-message">{{ errors.province[0] }}</div>

    <!-- 填写详细地址 -->
    <div class="weui-cells__title"><text class="error-message">*</text>详细地址</div>
    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell weui-cell_input">
        <div class="weui-cell__bd">
          {{ address }}
        </div>
        <div class="weui-cell__ft">
          <div class="weui-vcode-btn" @tap="chooseMap">在地图选择地址</div>
        </div>
      </div>
    </div>
    <!-- 详细地址错误信息 -->
    <div v-if=" errors.address " class="weui-cells__tips error-message">{{ errors.address[0] }}</div>


    <div class="weui-cells weui-cells_after-title">
      <div class="weui-cell  weui-cell_switch">
        <div class="weui-cell__hd">
          <checkbox-group bindchange="bindAgreeChange">
            <label class="weui-agree">
              <checkbox class="weui-agree__checkbox-check" bindchange="bindAgreeChange"  name="is_agree" value="{{ is_agree }}" checked="{{ is_agree }}"/>
              <span class="weui-agree__checkbox"></span>
              <span class="weui-agree__text">阅读并同意<navigator url="" class="weui-agree__link">《羽运动平台协议》</navigator></span>
            </label>
          </checkbox-group>
        </div>
        <div v-if=" errors.is_agree " class="weui-cell__ft">
          <icon type="warn" size="23" color="#E64340"></icon>
        </div>
      </div>
    </div>
    <div v-if=" errors.is_agree " class="weui-cells__tips error-message">{{ errors.is_agree[0] }}</div>

    <div class="weui-btn-area">
      <!--<button class="weui-btn" type="primary" formType="submit">提交</button>-->
      <button class="weui-btn" type="primary" @tap="submit">提交</button>
    </div>
  </form>
</template>
<config>
  {
    navigationBarTitleText: '创建俱乐部',
  }
</config>
<script>
  import wepy from '@wepy/core'
  import store from '@/store'
  import { mapGetters } from '@wepy/x'
  const QQMapWX = require('@/utils/qqmap-wx-jssdk.min.js')
  import { updateAvatar } from '../../api/user'
  import { createClub } from '../../api/club'
  import util from '../../utils/util'

  wepy.page({
    store,
    data: {
      formats: {},
      readOnly: false,
      placeholder: '请输入俱乐部介绍',
      editorCtx: {},
      latitude: '',
      longitude: '',
      province: '',
      city: '',
      area: '',
      city_index: '',
      // 错误信息
      errors: null,
      // 头像id
      avatarId: '',
      avatar: '',
      club: {},
      is_agree: false,
      currentUser: null,
      title: '',
      desc: '',
      wechat: '',
      address: '',
      region: ['四川省', '成都市', '武侯区'],
      userInfo: {}
    },
    // 计算的属性
    computed: {
      ...mapGetters([ 'user', 'isLoggedIn' ])
    },
    methods: {
      async chooseMap() {
        let map = await wx.chooseLocation()
        if (map.errMsg === 'chooseLocation:ok') {
          this.address = map.address
          this.latitude = map.latitude
          this.longitude = map.longitude
        }
      },
      bindRegionChange(e) {
        let region = this.region = e.$wx.detail.value
        this.province = region[0]
        this.city = region[1]
        this.area = region[2]
      },
      keyTitle(e) {
        this.title = e.$wx.detail.value
      },
      keyWechat(e) {
        this.wechat = e.$wx.detail.value
      },
      bindAgreeChange(e) {
        this.is_agree = !!e.$wx.detail.value.length
      },

      async updateAvatar () {
        // 未登录跳转到登录页面
        if (!this.isLoggedIn) {
          wx.navigateTo({
            url: '/pages/auth/weappLogin'
          })
          return
        }
        // 选择头像图片
        let image = await wx.chooseImage({count: 1})
        try {
          // 获取选择的图片
          let club = image.tempFilePaths[0]

          // 调用上传图片接口
          let imageResponse = await updateAvatar(club, 'club')

          // 上传成功成功记录数据
          if (imageResponse.statusCode === 201) {
            // 小程序上传结果没有做 JSON.parse，需要手动处理
            let responseData = JSON.parse(imageResponse.data)
            this.avatar = responseData.path
            this.avatarId = responseData.id
          }
        } catch (err) {
          console.log(err)
          util.error('系统繁忙,请稍后重试')
        }
      },
      // 表单提交
      async submit (e) {
        this.errors = null
        // 未登录跳转到登录页面
        if (!this.isLoggedIn) {
          wx.navigateTo({
            url: '/pages/auth/weappLogin'
          })
          return
        }
        if (!this.userInfo.phone) {
          wx.redirectTo({
            url: '/pages/auth/phone'
          })
          return
        }

        try {
          // e.detail.value 为表单提交的数据
          let formData = {}

          // 当avatarId被设置过之后则增加到 avatar_image_id 中
          formData.title = this.title
          // 获取富文本编辑器内容
          let editor_response = await this.editorCtx.getContents()
          formData.desc = editor_response.html
          formData.wechat = this.wechat
          formData.address = this.address
          formData.avatar_image_id = this.avatarId
          formData.province = this.province
          formData.city = this.city
          formData.area = this.area
          formData.latitude = this.latitude
          formData.longitude = this.longitude
          formData.city_index = this.city_index
          if (this.is_agree) {
            formData.is_agree = this.is_agree
          }

          let editResponse = await createClub(formData)
          // 设置报错信息

          // 请求成功，缓存用户数据
          if (editResponse.statusCode === 201) {
            this.club = editResponse.data
            await wx.requestSubscribeMessage({
              tmplIds: ['XphSrNLiOH20myrs_dvYQE8Ej9Emh8vpu3zo5gfUsZc'],
              success (res) {
                util.success('订阅成')
              }
            })
            util.success('创建成功')
            let that = this
            // 2 秒后返回上一页
            setTimeout(function() {
              wx.navigateTo({
                url: '/pages/club/show?id=' + that.club.id
              })
            }, 5000)
          }
        } catch (err) {
          if (err.statusCode === 422) {
            this.errors = err.data.errors
          }
        }
      },
      readOnlyChange() {
        this.readOnly = !this.readOnly
      },
      onEditorReady() {
        const that = this
        wx.createSelectorQuery().select('#editor').context(function (res) {
          that.editorCtx = res.context
        }).exec()
      },
      blur() {
        this.editorCtx.blur()
      },
      format(e) {
        console.log(e.$wx)
        let { name, value } = e.$wx.target.dataset
        if (!name) return
        // console.log('format', name, value)
        this.editorCtx.format(name, value)
      },
      onStatusChange(e) {
        const formats = e.$wx.detail.value
        this.formats = formats
      },
      insertDivider() {
        this.editorCtx.insertDivider({
          success: function () {
            console.log('insert divider success')
          }
        })
      },
      clear() {
        this.editorCtx.clear({
          success: function (res) {
            console.log("clear success")
          }
        })
      },
      huanhang() {
        this.editorCtx.insertText({ text: '\n' })
      },
      removeFormat() {
        this.editorCtx.removeFormat()
      },
      insertDate() {
        const date = new Date()
        const formatDate = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`
        this.editorCtx.insertText({
          text: formatDate
        })
      },
      undo(e) {
        this.editorCtx.undo()
      },
      redo(e) {
        this.editorCtx.redo()
      },
      async insertImage() {
        const that = this
        let image = await wepy.wx.chooseImage({count: 1})
        try {
          // 获取选择的图片
          let avatar = image.tempFilePaths[0]
          // 调用上传图片接口
          let imageResponse = await updateAvatar(avatar, 'editor')
          console.log(imageResponse)
          // 小程序上传结果没有做 JSON.parse，需要手动处理
          let responseData = JSON.parse(imageResponse.data)
          that.editorCtx.insertImage({
            src: responseData.path,
            data: {
              id: 'abcd',
              role: 'god'
            },
            width: '80%',
            success: function () {
              console.log('insert image success')
            }
          })
        } catch (err) {}
      }
    },
    async onShow() {
      let region = this.region
      this.province = region[0]
      this.city = region[1]
      this.area = region[2]
      // 未登录跳转到登录页面
      if (!this.isLoggedIn) {
        wx.navigateTo({
          url: '/pages/auth/weappLogin'
        })
        return
      }
      if (!this.userInfo.phone) {
        wx.redirectTo({
          url: '/pages/auth/phone'
        })
      }
    },
    async onLoad() {
      let that = this
      let qqmapsdk = new QQMapWX({
        key: 'QQHBZ-MWE6D-6IF4N-HJVWM-AJZRQ-7NBP4'
      })
      qqmapsdk.reverseGeocoder({
        location: {
          latitude: wx.getStorageSync('latitude'),
          longitude: wx.getStorageSync('longitude')
        },
        success: function(res) {
          if (res.status === 0) {
            that.city_index = res.result.address_component.city
          }
        },
        fail: function(error) {
          console.error(error)
        },
        complete: function(res) {
        }
      })
      this.userInfo = wx.getStorageSync('userInfo')
      if (!this.userInfo.phone) {
        wx.redirectTo({
          url: '/pages/auth/phone'
        })
      }
    }
  })
</script>
